#!/bin/bash

# Helper functions start with _ and are invisible to bash auto completion.
function _get_random_number {
        local min=$1
        local max=$2
        echo $(( ( RANDOM % $max )  + $min ))
}

# This is just an example
function build {
        local rand=$(_get_random_number 1 10)
        local i=0
        echo
        echo "Build $1"
        while [ $i -lt $rand ]; do
                sleep 1
                echo  " Computing $1 ..."
                ((i++))
        done
        echo "Finished $1"
        echo
}

# Parallelisation - run multiple tasks in parallel.
function build-all {
        build android & build iphone & build ipad & build web &
        wait
}

# Another example, but it's always a good practice to have a help function
function help {
        echo "$0 <task> <args>"
        echo "Tasks:"
        tasks | cat -n
}

# This task needs to left as it is
# This is for external plugins and programs to query the available tasks
function tasks {
        compgen -A function | grep -v "^_"
}

# This is a wrapper for what should be executed, when no args are passed to the
# Taskfile
function default {
        tasks
}

${@:-default}

